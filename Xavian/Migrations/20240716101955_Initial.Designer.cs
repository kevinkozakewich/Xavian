// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xavian.DataContext;

namespace Xavian.Migrations
{
    [DbContext(typeof(XavianDbContext))]
    [Migration("20240716101955_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Xavian.DataContext.Models.AppVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Version = 1
                        });
                });

            modelBuilder.Entity("Xavian.DataContext.Models.Log", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FurtherDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedUserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("OwnerUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdatedUserId");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Xavian.DataContext.Models.Site", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("OwnerUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TerritoryId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdatedUserId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("TerritoryId");

                    b.ToTable("Sites");
                });

            modelBuilder.Entity("Xavian.DataContext.Models.SitePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OwnerUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("SiteId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdatedUserId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("SiteId");

                    b.HasIndex("TeamId", "SiteId")
                        .IsUnique();

                    b.ToTable("SitePermissions");
                });

            modelBuilder.Entity("Xavian.DataContext.Models.Team", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("OwnerUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdatedUserId");

                    b.HasIndex("OwnerUserId", "Name")
                        .IsUnique()
                        .HasFilter("[OwnerUserId] IS NOT NULL AND [Name] IS NOT NULL");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Xavian.DataContext.Models.TeamUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Manager")
                        .HasColumnType("bit");

                    b.Property<long?>("OwnerUserId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeamId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LastUpdatedUserId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("UserId");

                    b.HasIndex("TeamId", "UserId")
                        .IsUnique();

                    b.ToTable("TeamUsers");
                });

            modelBuilder.Entity("Xavian.DataContext.Models.Territory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("OwnerUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Territories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Abbreviation = "CCA",
                            Deleted = false,
                            FullName = "Central Canada",
                            LastUpdatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            Abbreviation = "ECA",
                            Deleted = false,
                            FullName = "Eastern Canada",
                            LastUpdatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3L,
                            Abbreviation = "WCA",
                            Deleted = false,
                            FullName = "Western Canada",
                            LastUpdatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4L,
                            Abbreviation = "USA",
                            Deleted = false,
                            FullName = "USA",
                            LastUpdatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5L,
                            Abbreviation = "OTHER",
                            Deleted = false,
                            FullName = "Other",
                            LastUpdatedDateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Xavian.DataContext.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DbAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("GoogleAuthenticationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLoggedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("LastUpdatedUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("MicrosoftAuthenticationId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long?>("OwnerUserId")
                        .HasColumnType("bigint");

                    b.Property<bool>("WebAccess")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("LastUpdatedUserId");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Xavian.DataContext.Models.Log", b =>
                {
                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LastUpdatedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Xavian.DataContext.Models.Site", b =>
                {
                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LastUpdatedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.Territory", null)
                        .WithMany()
                        .HasForeignKey("TerritoryId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Xavian.DataContext.Models.SitePermission", b =>
                {
                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LastUpdatedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.Site", null)
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Xavian.DataContext.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Xavian.DataContext.Models.Team", b =>
                {
                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LastUpdatedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Xavian.DataContext.Models.TeamUser", b =>
                {
                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LastUpdatedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Xavian.DataContext.Models.User", b =>
                {
                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("LastUpdatedUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Xavian.DataContext.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
